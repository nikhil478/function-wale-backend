definitions:
  handlers.Credentials:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Organization:
    properties:
      about:
        type: string
      addressLine:
        type: string
      availableIn:
        type: string
      bio:
        type: string
      categoriesIn:
        items:
          type: string
        type: array
      country:
        type: string
      district:
        type: string
      email:
        type: string
      experience:
        type: string
      id:
        type: integer
      imageUrl1:
        type: string
      imageUrl2:
        type: string
      imageUrl3:
        type: string
      name:
        type: string
      pageName:
        type: string
      phoneNo:
        type: string
      pinCode:
        type: string
      specialities:
        type: string
      state:
        type: string
      userId:
        type: integer
    type: object
  models.Photo:
    properties:
      id:
        type: integer
      imageUrl:
        type: string
      organizationId:
        type: string
      tag:
        type: string
    type: object
  models.Plan:
    properties:
      id:
        type: integer
      organizationId:
        type: string
      services:
        items:
          type: string
        type: array
      startingFrom:
        type: integer
      tag:
        type: string
      type:
        type: string
    type: object
  models.ResponseUploadFile:
    properties:
      url:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Log in a user
      tags:
      - authentication
  /api/myorganization:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get organization details by user ID
      tags:
      - organizations
  /api/organization:
    post:
      consumes:
      - application/json
      parameters:
      - description: Organization Data
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/models.Organization'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new organization
      tags:
      - organizations
    put:
      consumes:
      - application/json
      parameters:
      - description: Organization Data
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/models.Organization'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update organization details
      tags:
      - organizations
  /api/organization/{id}:
    get:
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get organization details by ID
      tags:
      - organizations
  /api/organizations:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Organization'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get list of all organizations
      tags:
      - organizations
  /api/photos:
    get:
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      - description: Photo Tag
        in: query
        name: tag
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Photo'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get photos by organization ID and optionally by tag
      tags:
      - photos
    post:
      consumes:
      - application/json
      parameters:
      - description: Photo Data
        in: body
        name: photo
        required: true
        schema:
          $ref: '#/definitions/models.Photo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new photo entry
      tags:
      - photos
  /api/plans:
    get:
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      - description: Plan Tag
        in: query
        name: tag
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Plan'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get plans by organization ID and optionally by tag
      tags:
      - plans
    post:
      consumes:
      - application/json
      parameters:
      - description: Plan Data
        in: body
        name: plan
        required: true
        schema:
          $ref: '#/definitions/models.Plan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new plan entry
      tags:
      - plans
    put:
      consumes:
      - application/json
      parameters:
      - description: Plan Data
        in: body
        name: plan
        required: true
        schema:
          $ref: '#/definitions/models.Plan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update plan details
      tags:
      - plans
  /api/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.Credentials'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Sign up a new user
      tags:
      - authentication
  /api/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseUploadFile'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload file to Amazon S3
      tags:
      - files
swagger: "2.0"
